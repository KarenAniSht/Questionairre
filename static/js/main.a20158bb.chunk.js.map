{"version":3,"sources":["question-item.js","create-questionnaire.js","fill-questionnaire.js","App.js","reportWebVitals.js","index.js"],"names":["QuestionItem","question","index","setQuestionState","removeQuestion","addOption","style","marginBottom","position","id","TextField","required","variant","label","name","value","onChange","e","options","map","option","optionIndex","questionIndex","OptionItem","length","FormControlLabel","marginTop","marginRight","disabled","control","Radio","AddOptionItemIconButton","IconButton","color","paddingLeft","marginLeft","onClick","fontSize","DeleteIconButton","display","CreateQuestionnaire","getEmptyQuestionItem","reset","questions","React","useState","setQuestions","questionsCopy","Object","assign","undefined","target","filter","q","concat","textAlign","addQuestion","submit","o","localStorage","setItem","JSON","stringify","AddQuestionItemIconButton","SubmitButton","Button","type","FillQuestionnaire","getItem","parse","width","margin","i","RadioButtonOption","QuestionRadioButtonGroup","FormControl","component","FormLabel","RadioGroup","LinkTab","props","Tab","event","preventDefault","TabPanel","children","other","Box","p","App","setValue","AppBar","background","Tabs","newValue","console","log","href","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUAQaA,EAAe,SAAC,GAAoE,IAAnEC,EAAkE,EAAlEA,SAAUC,EAAwD,EAAxDA,MAAOC,EAAiD,EAAjDA,iBAAkBC,EAA+B,EAA/BA,eAAgBC,EAAe,EAAfA,UAC7E,OACI,sBAAKC,MAAO,CAACC,aAAc,IAA3B,UACI,cAAC,EAAD,CAAkBD,MAAO,CAACE,SAAU,YACxBC,GAAIR,EAASQ,GACbP,MAAOA,EACPE,eAAgBA,IAE5B,cAACM,EAAA,EAAD,CAAYJ,MAAO,CAACC,aAAc,IACtBI,UAAQ,EACRC,QAAQ,WACRC,MAAM,WACNC,KAAK,WACLC,MAAOd,EAASA,SAChBe,SAAU,SAAAC,GAAC,OAAId,EAAiBc,EAAGf,MAG3CD,EAASiB,QAAQC,KAAI,SAACC,EAAQC,EAAaH,GAAtB,OACjB,cAAC,EAAD,CACIA,QAASA,EACTG,YAAaA,EACbR,MAAO,WAAaQ,EAAY,GAChCC,cAAepB,EACfC,iBAAkBA,EAClBE,UAAWA,GANEgB,UAY/BE,EAAa,SAAC,GAA+E,IAA9EF,EAA6E,EAA7EA,YAAaR,EAAgE,EAAhEA,MAAOS,EAAyD,EAAzDA,cAAenB,EAA0C,EAA1CA,iBAAkBe,EAAwB,EAAxBA,QAASb,EAAe,EAAfA,UAC/E,OACI,gCACMa,EAAQM,OAAQ,IAAMH,EACJ,cAAC,EAAD,CAAyBhB,UAAWA,EAAWiB,cAAeA,IAC1D,KAExB,cAACG,EAAA,EAAD,CACInB,MAAO,CAAEoB,UAAW,EAAGC,YAAa,GACpCZ,MAAM,WACNa,UAAQ,EACRC,QAAS,cAACC,EAAA,EAAD,IACTjB,MAAM,KAGV,cAACH,EAAA,EAAD,CAAYE,QAAQ,WAERC,MAAOA,EACPC,KAAK,SACLE,SAAU,SAAAC,GAAC,OAAId,EAAiBc,EAAGK,EAAeD,KAH7CA,OASvBU,EAA0B,SAAC,GAAgC,IAA/B1B,EAA8B,EAA9BA,UAAWiB,EAAmB,EAAnBA,cACzC,OAAO,cAACU,EAAA,EAAD,CAAYC,MAAM,UACb,aAAW,aACX3B,MAAO,CAACoB,UAAW,GAAIQ,YAAa,EAAGC,YAAa,IACpDC,QAAS,SAAAnB,GAAC,OAAIZ,EAAUiB,IAH7B,SAIK,cAAC,IAAD,CAAee,SAAS,cAIlCC,EAAmB,SAAC,GAAiC,IAAhC7B,EAA+B,EAA/BA,GAAIP,EAA2B,EAA3BA,MAAOE,EAAoB,EAApBA,eAClC,OACI,cAAC4B,EAAA,EAAD,CAAY1B,MAASJ,EAAQ,EAAK,CAACqC,QAAS,gBAAkB,CAACA,QAAS,QAC5DN,MAAM,QACN,aAAW,eACXG,QAAS,SAAAnB,GAAC,OAAIb,EAAea,EAAGR,IAH5C,SAII,cAAC,IAAD,CAAkB4B,SAAS,cCxE1BG,EAAsB,WAC/B,IAAMC,EAAuB,SAACC,GAC1B,MAAQ,CAAC,CACIjC,GAAMiC,EAAS,EAAIC,EAAUA,EAAUnB,OAAS,GAAGf,GAAG,EACtDR,SAAU,GACViB,QAAS,CACL,CACIT,GAAI,EACJW,OAAQ,IAEZ,CACIX,GAAI,EACJW,OAAQ,QAKjC,EAAkCwB,IAAMC,SAASJ,GAAqB,IAAtE,mBAAOE,EAAP,KAAkBG,EAAlB,KAEM3C,EAAmB,SAACc,EAAGK,EAAeD,GACxC,IAAI0B,EAAgBC,OAAOC,OAAO,GAAIN,QAClBO,IAAhB7B,EACA0B,EAAczB,GAAeL,EAAEkC,OAAOrC,MAAQG,EAAEkC,OAAOpC,MAGvDgC,EAAczB,GAAeJ,QAAQG,GAAaJ,EAAEkC,OAAOrC,MAAQG,EAAEkC,OAAOpC,MAEhF+B,EAAaC,IASX3C,EAAiB,SAACa,EAAGR,GACvBqC,EAAaH,EAAUS,QAAO,SAACC,GAAD,OAAOA,EAAE5C,KAAOA,OAyB5CJ,EAAY,SAACiB,GACf,IAAIyB,EAAgBC,OAAOC,OAAO,GAAIN,GACtCI,EAAczB,GAAeJ,QAAU6B,EAAczB,GAAeJ,QAAQoC,OAAO,CAC/E7C,GAAIkC,EAAUrB,GAAeJ,QAAQM,OACrCJ,OAAQ,KAEZ0B,EAAaC,IAGjB,OACI,uBAAMzC,MAAO,CAACiD,UAAW,UAAzB,UAEQZ,EAAUxB,KAAI,SAAClB,EAAUC,GACrB,OACQ,cAAC,EAAD,CACID,SAAUA,EACVC,MAAOA,EACPC,iBAAkBA,EAClBC,eAAgBA,EAChBC,UAAWA,GALIJ,EAASQ,OAW5C,cAAC,EAAD,CAA2B+C,YA/Cf,WATTb,EAAUS,QAAO,SAAAnD,GACpB,MAA6B,KAAtBA,EAASA,YACjBuB,OAAS,GAWZsB,EAAaH,EAAUW,OAAOb,SA6C1B,cAAC,EAAD,CAAcgB,OAjCP,WARXX,EACIH,EAAUS,QAAO,SAACC,GAAD,MACkB,KAAfA,EAAEpD,UAEFoD,EAAEnC,QAAQkC,QAAO,SAAAM,GAAC,MAAkB,KAAdA,EAAExC,WAAgBM,QAAU,MAM1EmC,aAAaC,QAAQ,YAAaC,KAAKC,UAAUnB,IACjDG,EAAaL,GAAqB,WAmCpCsB,EAA4B,SAAC,GAAmB,IAAlBP,EAAiB,EAAjBA,YAChC,OAAO,cAACxB,EAAA,EAAD,CAAYC,MAAM,UACb,aAAW,eACXG,QAASoB,EAFd,SAGC,cAAC,IAAD,CAAenB,SAAS,aAI9B2B,EAAe,SAAC,GAAc,IAAbP,EAAY,EAAZA,OACnB,OAAO,qBAAKnD,MAAO,CAAEoB,UAAW,IAAzB,SACK,cAACuC,EAAA,EAAD,CAAQC,KAAK,SACTtD,QAAQ,WACRwB,QAASqB,EAFb,uB,2BCvGHU,EAAoB,WAC7B,IAKA,EAAoBvB,IAAMC,SAHA,OADNc,aAAaS,QAAQ,aACPP,KAAKQ,MAAMV,aAAaS,QAAQ,cAAgB,IAG3EzB,EAAP,oBAEA,OACI,qBAAKrC,MAAO,CAAEgE,MAAO,IAAKf,UAAW,OAAQgB,OAAQ,UAArD,gBAEK5B,QAFL,IAEKA,OAFL,EAEKA,EAAWxB,KAAI,SAACkC,EAAGmB,GAChB,OAAQ,cAAC,EAAD,eAAyCnB,GAAVA,EAAE5C,UAQnDgE,EAAoB,SAAC,GAAiB,EAAhBhE,GAAiB,IAAbW,EAAY,EAAZA,OAC5B,OAAQ,qBAAKd,MAAoB,KAAXc,EAAiB,CAACmB,QAAS,gBAAkB,CAACA,QAAS,QAArE,SACI,cAACd,EAAA,EAAD,CACIV,MAAOK,EACPS,QAAS,cAACC,EAAA,EAAD,IACTjB,MAAOO,OAKrBsD,EAA2B,SAAC,GAA4B,EAA3BjE,GAA4B,IAAxBR,EAAuB,EAAvBA,SAAUiB,EAAa,EAAbA,QAC7C,OAAQ,qBAAKZ,MAAO,CAACC,aAAc,IAA3B,SACI,eAACoE,EAAA,EAAD,CAAaC,UAAU,WAAvB,UACI,cAACC,EAAA,EAAD,CAAWD,UAAU,SAArB,SAA+B3E,IAC/B,cAAC6E,EAAA,EAAD,CAAY,aAAW,UACnBhE,KAAK,gBADT,gBAGKI,QAHL,IAGKA,OAHL,EAGKA,EAASC,KAAI,SAACuC,GACX,OAAO,cAAC,EAAD,eAAkCA,GAAVA,EAAEjD,e,mFClC7D,SAASsE,EAAQC,GACf,OACU,cAACC,EAAA,EAAD,aACEL,UAAU,IACVxC,QAAS,SAAA8C,GACPA,EAAMC,mBAEJH,IAKlB,SAASI,EAASJ,GAChB,IAAQK,EAAqCL,EAArCK,SAAUtE,EAA2BiE,EAA3BjE,MAAOb,EAAoB8E,EAApB9E,MAAUoF,EAAnC,YAA6CN,EAA7C,GAEA,OACU,+CAASM,GAAT,aACKvE,IAAUb,GAAS,cAACqF,EAAA,EAAD,CAAKC,EAAG,EAAR,SAAYH,OAKhD,IAqCeI,EArCH,WACV,MAA0B7C,IAAMC,SAAS,GAAzC,mBAAO9B,EAAP,KAAc2E,EAAd,KAOE,OACA,gCACE,cAACC,EAAA,EAAD,CAAQnF,SAAS,SAASF,MAAO,CAAEsF,WAAY,WAA/C,SACE,eAACC,EAAA,EAAD,CAAM9E,MAAOA,EAAOC,SARH,SAACkE,EAAOY,GAC3BC,QAAQC,IAAIF,GACZJ,EAASI,IAMP,UACE,cAACf,EAAD,CAASlE,MAAM,uBAAuBoF,KAAK,YAC3C,cAAClB,EAAD,CAASlE,MAAM,qBAAqBoF,KAAK,eAI7C,cAACb,EAAD,CAAUrE,MAAOA,EAAOb,MAAO,EAA/B,SACE,cAAC,EAAD,MAEF,cAACkF,EAAD,CAAUrE,MAAOA,EAAOb,MAAO,EAA/B,SACE,cAAC,EAAD,MAGF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgG,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACE,cAAC,EAAD,aClDKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a20158bb.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Radio from '@mui/material/Radio';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\n\r\nexport const QuestionItem = ({question, index, setQuestionState, removeQuestion, addOption}) => {\r\n    return (\r\n        <div style={{marginBottom: 35}}>\r\n            <DeleteIconButton style={{position: 'absolute'}}\r\n                        id={question.id}\r\n                        index={index}\r\n                        removeQuestion={removeQuestion}/>\r\n            \r\n            <TextField  style={{marginBottom: 20}}\r\n                        required\r\n                        variant=\"standard\"\r\n                        label=\"Question\"    \r\n                        name=\"question\"\r\n                        value={question.question}\r\n                        onChange={e => setQuestionState(e, index) }/>\r\n\r\n            {\r\n                question.options.map((option, optionIndex, options) => \r\n                    <OptionItem key={optionIndex}\r\n                        options={options}\r\n                        optionIndex={optionIndex}\r\n                        label={\"Option \" + (optionIndex+1)}\r\n                        questionIndex={index}\r\n                        setQuestionState={setQuestionState}\r\n                        addOption={addOption}/>)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst OptionItem = ({optionIndex, label, questionIndex, setQuestionState, options, addOption}) => {\r\n    return (\r\n        <div>\r\n            {(options.length -1 === optionIndex) ? (\r\n                                <AddOptionItemIconButton addOption={addOption} questionIndex={questionIndex}/>\r\n                                ) : null}\r\n            \r\n            <FormControlLabel\r\n                style={{ marginTop: 9, marginRight: 0 }}\r\n                value=\"disabled\"\r\n                disabled\r\n                control={<Radio />}\r\n                label=\"\"\r\n            />\r\n\r\n            <TextField  variant=\"standard\"\r\n                        key={optionIndex}\r\n                        label={label}\r\n                        name=\"option\"\r\n                        onChange={e => setQuestionState(e, questionIndex, optionIndex) }\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddOptionItemIconButton = ({addOption, questionIndex}) => {\r\n    return <IconButton color=\"primary\"\r\n                aria-label=\"add option\"\r\n                style={{marginTop: 10, paddingLeft: 0, marginLeft: -33}}\r\n                onClick={e => addOption(questionIndex)}>\r\n                <AddCircleIcon fontSize=\"medium\" />\r\n            </IconButton>\r\n}\r\n\r\nconst DeleteIconButton = ({id, index, removeQuestion}) => {\r\n    return (\r\n        <IconButton style={ (index > 0) ? {display: \"inline-block\"} : {display: \"none\"} }\r\n                    color=\"error\"\r\n                    aria-label=\"add question\"\r\n                    onClick={e => removeQuestion(e, id)}>\r\n            <RemoveCircleIcon fontSize=\"medium\" />\r\n        </IconButton>\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport { QuestionItem } from './question-item';\r\n\r\nexport const CreateQuestionnaire = () => {\r\n    const getEmptyQuestionItem = (reset) => {\r\n        return  [{\r\n                     id: ((reset) ? 0 : questions[questions.length - 1].id+1),\r\n                     question: '',\r\n                     options: [\r\n                         {\r\n                             id: 0,\r\n                             option: ''\r\n                         },\r\n                         {\r\n                             id: 1,\r\n                             option: ''\r\n                         }\r\n                     ]\r\n                 }]\r\n    }\r\n    const [questions, setQuestions] = React.useState(getEmptyQuestionItem(true));\r\n\r\n    const setQuestionState = (e, questionIndex, optionIndex) => {\r\n        let questionsCopy = Object.assign([], questions);\r\n        if (optionIndex === undefined) {\r\n            questionsCopy[questionIndex][e.target.name] = e.target.value;\r\n        }\r\n        else {\r\n            questionsCopy[questionIndex].options[optionIndex][e.target.name] = e.target.value;\r\n        }\r\n        setQuestions(questionsCopy);\r\n    }\r\n\r\n    const isEmptyField = () => {\r\n        return questions.filter(question => {\r\n            return question.question === ''\r\n        }).length > 0;\r\n    }\r\n\r\n    const removeQuestion = (e, id) => {\r\n        setQuestions(questions.filter((q) => q.id !== id));\r\n    }   \r\n\r\n    const addQuestion = () => {\r\n        if (isEmptyField())\r\n            return;\r\n\r\n        setQuestions(questions.concat(getEmptyQuestionItem()));\r\n    }\r\n\r\n    const removeEmptyQuestions = () => {\r\n        setQuestions(\r\n            questions.filter((q) => \r\n                                q.question !== ''\r\n                                &&\r\n                                q.options.filter(o => o.options !== '').length >= 2\r\n                            ));\r\n    }\r\n\r\n    const submit = () => {\r\n        removeEmptyQuestions();\r\n        localStorage.setItem('questions', JSON.stringify(questions));\r\n        setQuestions(getEmptyQuestionItem(true));   \r\n    }\r\n\r\n    const addOption = (questionIndex) => {\r\n        let questionsCopy = Object.assign([], questions);\r\n        questionsCopy[questionIndex].options = questionsCopy[questionIndex].options.concat({\r\n            id: questions[questionIndex].options.length,\r\n            option: ''\r\n        })\r\n        setQuestions(questionsCopy);\r\n    }\r\n\r\n    return (\r\n        <form style={{textAlign: 'center'}}>\r\n            {\r\n                questions.map((question, index) => {\r\n                    return (\r\n                            <QuestionItem key={question.id}\r\n                                question={question} \r\n                                index={index}\r\n                                setQuestionState={setQuestionState}\r\n                                removeQuestion={removeQuestion}\r\n                                addOption={addOption}\r\n                            />\r\n                    );\r\n                })\r\n            }\r\n\r\n            <AddQuestionItemIconButton addQuestion={addQuestion} />\r\n\r\n            <SubmitButton submit={submit}/>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst AddQuestionItemIconButton = ({addQuestion}) => {\r\n    return <IconButton color=\"primary\"\r\n                aria-label=\"add question\"\r\n                onClick={addQuestion}>\r\n            <AddCircleIcon fontSize=\"large\" />\r\n            </IconButton>\r\n}\r\n\r\nconst SubmitButton = ({submit}) => {\r\n    return <div style={{ marginTop: 30 }}>\r\n                <Button type=\"submit\" \r\n                    variant=\"outlined\"\r\n                    onClick={submit}>Submit</Button>\r\n            </div>\r\n}","import React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\n\r\nexport const FillQuestionnaire = () => {\r\n    const getQuestionsFromLocalStorage = () => {\r\n        let questions = localStorage.getItem('questions');\r\n        return (questions !== null) ? JSON.parse(localStorage.getItem('questions')) : []        \r\n    }\r\n\r\n    const [questions] = React.useState(getQuestionsFromLocalStorage());\r\n\r\n    return(\r\n        <div style={{ width: 250, textAlign: 'left', margin: '0 auto' }}>\r\n\r\n            {questions?.map((q, i) => {                            \r\n                return  <QuestionRadioButtonGroup key={q.id} {...q} />\r\n            })}\r\n            \r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst RadioButtonOption = ({id, option}) => {\r\n    return  <div style={ (option !== '') ? {display: \"inline-block\"} : {display: \"none\"} }>\r\n                <FormControlLabel\r\n                    value={option} \r\n                    control={<Radio />}\r\n                    label={option}\r\n                />\r\n            </div>\r\n}\r\n\r\nconst QuestionRadioButtonGroup = ({id, question, options}) => {\r\n    return  <div style={{marginBottom: 30}}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">{question}</FormLabel>         \r\n                    <RadioGroup aria-label=\"options\"\r\n                        name=\"options_group\">\r\n\r\n                        {options?.map((o) => {\r\n                            return <RadioButtonOption key={o.id} {...o} />\r\n                        })}\r\n\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>         \r\n}","import React from 'react';\nimport './App.css';\nimport { CreateQuestionnaire } from './create-questionnaire';\nimport { FillQuestionnaire } from './fill-questionnaire';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Box from \"@material-ui/core/Box\";\n\nimport { Route, BrowserRouter } from 'react-router-dom';\n\nfunction LinkTab(props) {\n  return  (\n            <Tab\n              component=\"a\"\n              onClick={event => {\n                event.preventDefault();\n              }}\n              {...props}\n            />\n          );\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return  (\n            <div {...other}>\n                {value === index && <Box p={3}>{children}</Box>}\n            </div>\n          );\n}\n\nconst App = () => {\n  const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n      console.log(newValue)\n      setValue(newValue);\n    };  \n\n    return (\n    <div>\n      <AppBar position=\"static\" style={{ background: '#dddddd' }}>\n        <Tabs value={value} onChange={handleChange}>\n          <LinkTab label=\"Create Questionnaire\" href=\"/create\" />\n          <LinkTab label=\"Fill Questionnaire\" href=\"/fill\" />\n        </Tabs>\n      </AppBar>\n\n      <TabPanel value={value} index={0}>\n        <CreateQuestionnaire />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <FillQuestionnaire />\n      </TabPanel>\n\n      <BrowserRouter>\n        <Route path=\"/create\">\n          <CreateQuestionnaire />\n        </Route>\n        <Route path=\"/fill\">\n          <FillQuestionnaire />\n        </Route>\n      </BrowserRouter>\n      </div>\n    );\n  \n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}